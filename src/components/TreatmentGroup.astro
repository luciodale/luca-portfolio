---
import { Image } from "astro:assets";

interface Props {
  title: string;
  description?: string;
  images?: ImageMetadata;
}

const { title, description, images } = Astro.props;
---

<div>
  {
    images && (
      <Image
        src={images}
        alt=""
        width={800}
        height={800}
        class="w-full md:max-w-2xl h-[400px] mx-auto object-cover"
        quality={80}
        format="webp"
      />
    )
  }
  <div class="bg-secondary mx-auto w-full md:max-w-2xl relative shadow-md">
    <div class="cursor-pointer toggle-description">
      <div class="p-4 md:p-6 flex items-center justify-between">
        <h1 class="text-xl sm:text-2xl uppercase font-light">{title}</h1>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-6 w-6 transition-transform duration-300 shrink-0"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          stroke-width="2"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M19 9l-7 7-7-7"></path>
        </svg>
      </div>

      <div
        class="description-content max-h-0 overflow-hidden transition-[max-height] duration-500 ease-in-out"
      >
        <div class="px-4 md:px-6 pb-4 md:pb-6">
          <p class="py-4 text-lg text-gray-700 overflow-y-auto h-36">
            {description}
          </p>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const cards = document.querySelectorAll(".toggle-description");

    cards.forEach((card) => {
      card.addEventListener("click", () => {
        const descriptionContent = card.querySelector(".description-content");
        const arrowIcon = card.querySelector("svg");

        if (!descriptionContent) return;
        if (!arrowIcon) return;

        if (descriptionContent.classList.contains("max-h-0")) {
          descriptionContent.classList.remove("max-h-0");
          descriptionContent.classList.add("max-h-40");
          arrowIcon.classList.add("rotate-180");
        } else {
          descriptionContent.classList.add("max-h-0");
          descriptionContent.classList.remove("max-h-40");
          arrowIcon.classList.remove("rotate-180");
        }
      });
    });
  });
</script>
